# -*- coding: utf-8 -*-
"""Aula8

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18FIXa3hwncJvg2Jwha3wp7bf2XAhHHGn
"""
#modelo

class Pessoa:

    def __init__(self, nome, cpf):
        self.__nome = nome
        self.__cpf = cpf
    
    def setcpf(self,cpf):
        self.__cpf = cpf
    
    def getcpf(self):
        return self.__cpf


a = Pessoa("Ze",12)

#dar erro no getcpf pois 
#não chama cpf da classe pai
#mas cria uma nova versão
class Professorteste(Pessoa):
  def __init__(self, cpf, nome, siape, dep):
    self.__cpf = cpf
    self.__nome = nome
    self.__siape = siape
    self.__dep = dep


class Professor(Pessoa):
    #__init__ é um método privado
    #não só os atributos mas os métodos também podem ser 
    #privados

    #nessa classe todos os atributos devem ser privados
    def __init__(self, nome, cpf, siape, departamento):
        #o que colocar aqui?
        super().__init__(nome,cpf)
        self.__siape = siape
        self.__dep = departamento

    #fazer os getters and setters
    # preciso fazer somente siape e departamento

    def getsiape(self):
      return self.__siape
    
    def getdep(self):
      return self.__dep
    
    def setsiape(self,siape):
      self.__siape = siape
    
    def setdep(self, dep):
      self.__dep = dep
    
    #metodo para criar disciplina
    # guarde em um arquivo
    def criacao_disciplina(self):
        pass


class Aluno(Pessoa):
  def __init__(self, nome, cpf, dre,curso):
    super().__init__(nome,cpf)
    self.__dre = dre
    self.__curso = curso
  
  def getdre(self):
    return self.__dre
  
  def setdre(self,dre):
    self.__dre = dre
  
  def getcurso(self):
    return self.__curso
  
  def setcurso(self,curso):
    self.__curso = curso
  
  #método de inscricao em disciplinas
  #guarde em um arquivo
  def inscricao(self):
    pass
  
  def calculaCR(self):
    pass

class AlunoGrad(Aluno):
  
  def calculaCR(self):
    pass

class AlunoPos(Aluno):
    
  def calculaCR(self):
    pass

b = Professor("Bob","13", "23", "Nce")

c = Aluno("Ze", "15", "11", "ECA")

print(b.getdep())

print(b.getcpf())

print(c.getdre())

print(c.getcpf())

#z = Professorteste("1","buda","1","cc")

#print(z.getcpf())